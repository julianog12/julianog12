<div style="; margin:0 auto; width: 45%; border-style: solid; border-width:thin; border-color: #FFFFFF;">
     <h2><center>Total Objetos de Implementação por Modelo</center></h2>

<hr>
  <table id="example" class="table">
  <thead class="grey lighten-2"">
     <tr>
       <th>Modelo</th>
       <th>Tot.Componentes</th>
       <th>Tot.Operations</th>
       <th>Tot.Modelo</th>
       <th>Tot.Linhas do Modelo</th>
       <th>% Linhas Total</th>
    </tr>
  </thead>
  <tbody>
    <% @total_objetos_de_impl_modelo.each do |objs| %>
         <tr>
            <td><%= objs[:name] %></td>
            <td><%= number_with_delimiter(objs[:data][:componentes]) %></td>
            <td><%= number_with_delimiter(objs[:data][:operations]) %></td>
            <td><%= number_with_delimiter(objs[:data][:operations].to_i + objs[:data][:componentes].to_i) %></td>
            <% 
               total_linhas_geral = 0
               total_linhas_modelo = 0
               percent = 0.00
               unless @tot_linhas_por_modelo.nil?
                 total_linhas_geral = @tot_linhas_por_modelo.inject(0) {|sum, hash| sum + hash[1]} || 0 
                 total_linhas_modelo = @tot_linhas_por_modelo.find { |key, values| key == objs[:name]}[1] || 0
                 percent = (total_linhas_modelo.to_f/total_linhas_geral.to_f)*100
               end
            %>
            <td><%= number_with_delimiter(total_linhas_modelo) %></td>
            <td><%= number_to_percentage(percent, precision: 2) %></td>
         </tr>
     <% end %>
  </tbody>
  </table>

<script>
	$(document).ready(function() {
    jQuery.fn.dataTableExt.oSort['numeric-comma-asc'] = function(a, b) {
        var x = (a == "-") ? 0 : a.replace(/,/, ".");
        var y = (b == "-") ? 0 : b.replace(/,/, ".");
        x = parseFloat(x);
        y = parseFloat(y);
        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
    };

    jQuery.fn.dataTableExt.oSort['numeric-comma-desc'] = function(a, b) {
        var x = (a == "-") ? 0 : a.replace(/,/, ".");
        var y = (b == "-") ? 0 : b.replace(/,/, ".");
        x = parseFloat(x);
        y = parseFloat(y);
        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
    };
	  var table = $('#example').DataTable( {
          dom: 'lBfrtip',
	        lengthChange: true,
          "lengthMenu": [ [7, 60, -1], [7, 60, "All"] ],
          pageLength: 7,
	        buttons: [
        'copyHtml5',
        'csvHtml5',
        'excelHtml5',
        'pdfHtml5'
    ],
          language: {
              "sEmptyTable": "Nenhum registro encontrado",
              "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
              "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
              "sInfoFiltered": "(Filtrados de _MAX_ registros)",
              "sInfoPostFix": "",
              "decimal": ",",
              "thousands": ".",
              "sInfoThousands": ".",
              "sLengthMenu": "_MENU_ resultados por página",
              "sLoadingRecords": "Carregando...",
              "sProcessing": "Processando...",
              "sZeroRecords": "Nenhum registro encontrado",
              "sSearch": "Pesquisar",
              "oPaginate": {
                    "sNext": "Próximo",
                    "sPrevious": "Anterior",
                    "sFirst": "Primeiro",
                    "sLast": "Último"
               },
               buttons: {
                    colvis: 'Campos'
               },
              "oAria": {
                   "sSortAscending": ": Ordenar colunas de forma ascendente",
                    "sSortDescending": ": Ordenar colunas de forma descendente"
              }
          }
	  });
    //table.buttons().container().appendTo( '.example_wrapper .col-sm-6:eq(0)' );

	 
	} );
    
</script>
</div>